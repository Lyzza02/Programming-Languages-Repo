name: MSBuild
# add cn branch and compile it then zip it 
on:
  push:
    branches: [ master, cn ]
  pull_request:
    branches: [ master, cn ]  
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./akebi-gc.sln
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  tag1: V ${{ github.run_number }}

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2



    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      timeout-minutes: 3
      continue-on-error: true
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
     
    - name: Global-Build-zip
      run: 7z a Global-Build.zip bin\Release-x64\injector.exe bin\Release-x64\CLibrary.dll

    - name: Clear bin folder
      run: rm -rf bin
    - name: idk
      run: git checkout cn
    - name: CN-Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      timeout-minutes: 3
      continue-on-error: true
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    - name: CN-Build-zip
      run: 7z a CN-Build.zip bin\Release-x64\injector.exe bin\Release-x64\CLibrary.dll
    
    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: | 
          Global-Build.zip
          CN-Build.zip
  
    
   
      


  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: my-artifact
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: nothing
          tag_prefix: "v"
          #add description

          files: |
            Global-Build.zip
            CN-Build.zip
          
      